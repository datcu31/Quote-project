{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\React-Router\\\\src\\\\pages\\\\QuoteDetail.js\",\n  _s = $RefreshSig$();\nimport { Fragment, useEffect } from \"react\";\nimport { Link, Route, useParams, useRouteMatch } from \"react-router-dom\";\nimport Comments from \"../components/comments/Comments\";\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\nimport useHttp from \"../hooks/use-http\";\nimport { getSingleQuote } from \"../lib/api\";\n\n// const DUMMY_QUOTES = [\n//     { id: 'q1', author: 'Max', text: 'Learning React is fun!' },\n//     { id: 'q2', author: 'Alex', text: 'Learning Redux is not so easy' },\n//     { id: 'q3', author: 'Tania', text: 'I will start to code' },\n// ];\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuoteDetail = () => {\n  _s();\n  const {\n    sendRequest,\n    status,\n    data: loadedQuote,\n    error\n  } = useHttp(getSingleQuote, true);\n  const match = useRouteMatch();\n  const params = useParams();\n  const {\n    quoteId\n  } = params;\n\n  // const quote = DUMMY_QUOTES.find((quote) => quote.id === params.quoteId)\n\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [sendRequest]);\n  if (!quote) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No quote found!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(HighlightedQuote, {\n      text: quote.text,\n      author: quote.author\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: match.path,\n      exact: true,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"centered\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          className: \"btn--flat\",\n          to: `${match.url}/comments`,\n          children: \"Load comments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: `${match.path}/comments`,\n      children: /*#__PURE__*/_jsxDEV(Comments, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n_s(QuoteDetail, \"HM6hjMRObtTZOtoOPZUtFi1Ut+c=\", false, function () {\n  return [useHttp, useRouteMatch, useParams];\n});\n_c = QuoteDetail;\nexport default QuoteDetail;\nvar _c;\n$RefreshReg$(_c, \"QuoteDetail\");","map":{"version":3,"names":["Fragment","useEffect","Link","Route","useParams","useRouteMatch","Comments","HighlightedQuote","useHttp","getSingleQuote","QuoteDetail","sendRequest","status","data","loadedQuote","error","match","params","quoteId","quote","text","author","path","url"],"sources":["C:/React/React-Router/src/pages/QuoteDetail.js"],"sourcesContent":["import { Fragment, useEffect } from \"react\";\r\nimport { Link, Route, useParams, useRouteMatch } from \"react-router-dom\";\r\nimport Comments from \"../components/comments/Comments\";\r\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\r\nimport useHttp from \"../hooks/use-http\";\r\nimport { getSingleQuote } from \"../lib/api\";\r\n\r\n// const DUMMY_QUOTES = [\r\n//     { id: 'q1', author: 'Max', text: 'Learning React is fun!' },\r\n//     { id: 'q2', author: 'Alex', text: 'Learning Redux is not so easy' },\r\n//     { id: 'q3', author: 'Tania', text: 'I will start to code' },\r\n// ];\r\n\r\nconst QuoteDetail = () => {\r\n    const { sendRequest, status, data: loadedQuote, error } = useHttp(getSingleQuote, true);\r\n    \r\n    const match = useRouteMatch();\r\n    const params = useParams();\r\n\r\n    const { quoteId} = params;\r\n\r\n    // const quote = DUMMY_QUOTES.find((quote) => quote.id === params.quoteId)\r\n\r\n    useEffect(() => {\r\n        sendRequest(quoteId);\r\n    }, [sendRequest])\r\n\r\n    if (!quote) {\r\n        return (\r\n            <p>No quote found!</p>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <HighlightedQuote text={quote.text} author={quote.author} />\r\n            <Route path={match.path} exact>\r\n                <div className=\"centered\">\r\n                    <Link className=\"btn--flat\" to={`${match.url}/comments`}>Load comments</Link>\r\n                </div>\r\n            </Route>\r\n            <Route path={`${match.path}/comments`}>\r\n                <Comments />\r\n            </Route>\r\n        </Fragment>\r\n\r\n    );\r\n};\r\n\r\nexport default QuoteDetail;"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,IAAI,EAAEC,KAAK,EAAEC,SAAS,EAAEC,aAAa,QAAQ,kBAAkB;AACxE,OAAOC,QAAQ,MAAM,iCAAiC;AACtD,OAAOC,gBAAgB,MAAM,uCAAuC;AACpE,OAAOC,OAAO,MAAM,mBAAmB;AACvC,SAASC,cAAc,QAAQ,YAAY;;AAE3C;AACA;AACA;AACA;AACA;AAAA;AAEA,MAAMC,WAAW,GAAG,MAAM;EAAA;EACtB,MAAM;IAAEC,WAAW;IAAEC,MAAM;IAAEC,IAAI,EAAEC,WAAW;IAAEC;EAAM,CAAC,GAAGP,OAAO,CAACC,cAAc,EAAE,IAAI,CAAC;EAEvF,MAAMO,KAAK,GAAGX,aAAa,EAAE;EAC7B,MAAMY,MAAM,GAAGb,SAAS,EAAE;EAE1B,MAAM;IAAEc;EAAO,CAAC,GAAGD,MAAM;;EAEzB;;EAEAhB,SAAS,CAAC,MAAM;IACZU,WAAW,CAACO,OAAO,CAAC;EACxB,CAAC,EAAE,CAACP,WAAW,CAAC,CAAC;EAEjB,IAAI,CAACQ,KAAK,EAAE;IACR,oBACI;MAAA,UAAG;IAAe;MAAA;MAAA;MAAA;IAAA,QAAI;EAE9B;EAEA,oBACI,QAAC,QAAQ;IAAA,wBACL,QAAC,gBAAgB;MAAC,IAAI,EAAEA,KAAK,CAACC,IAAK;MAAC,MAAM,EAAED,KAAK,CAACE;IAAO;MAAA;MAAA;MAAA;IAAA,QAAG,eAC5D,QAAC,KAAK;MAAC,IAAI,EAAEL,KAAK,CAACM,IAAK;MAAC,KAAK;MAAA,uBAC1B;QAAK,SAAS,EAAC,UAAU;QAAA,uBACrB,QAAC,IAAI;UAAC,SAAS,EAAC,WAAW;UAAC,EAAE,EAAG,GAAEN,KAAK,CAACO,GAAI,WAAW;UAAA,UAAC;QAAa;UAAA;UAAA;UAAA;QAAA;MAAO;QAAA;QAAA;QAAA;MAAA;IAC3E;MAAA;MAAA;MAAA;IAAA,QACF,eACR,QAAC,KAAK;MAAC,IAAI,EAAG,GAAEP,KAAK,CAACM,IAAK,WAAW;MAAA,uBAClC,QAAC,QAAQ;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA,QACR;EAAA;IAAA;IAAA;IAAA;EAAA,QACD;AAGnB,CAAC;AAAC,GAlCIZ,WAAW;EAAA,QAC6CF,OAAO,EAEnDH,aAAa,EACZD,SAAS;AAAA;AAAA,KAJtBM,WAAW;AAoCjB,eAAeA,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}