{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\React-Router\\\\src\\\\pages\\\\QuoteDetail.js\",\n  _s = $RefreshSig$();\nimport { Fragment } from \"react\";\nimport { Link, Route, useParams, useRouteMatch } from \"react-router-dom\";\nimport Comments from \"../components/comments/Comments\";\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DUMMY_QUOTES = [{\n  id: 'q1',\n  author: 'Max',\n  text: 'Learning React is fun!'\n}, {\n  id: 'q2',\n  author: 'Alex',\n  text: 'Learning Redux is not so easy'\n}, {\n  id: 'q3',\n  author: 'Tania',\n  text: 'I will start to code'\n}];\nconst QuoteDetail = () => {\n  _s();\n  const params = useParams();\n  const match = useRouteMatch();\n  const quote = DUMMY_QUOTES.find(quote => quote.id === params.quoteId);\n  if (!quote) {\n    /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No quote found!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(HighlightedQuote, {\n      text: quote.text,\n      author: quote.author\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: match.path,\n      exact: true,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"centered\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          className: \"btn--flat\",\n          to: `/quotes/${params.quoteId}/comments`,\n          children: \"Load comments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: `${match.path}/comments`,\n      children: /*#__PURE__*/_jsxDEV(Comments, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n_s(QuoteDetail, \"Z/bFVfTt127x9UIB6x9JiYH3soU=\", false, function () {\n  return [useParams, useRouteMatch];\n});\n_c = QuoteDetail;\nexport default QuoteDetail;\nvar _c;\n$RefreshReg$(_c, \"QuoteDetail\");","map":{"version":3,"names":["Fragment","Link","Route","useParams","useRouteMatch","Comments","HighlightedQuote","DUMMY_QUOTES","id","author","text","QuoteDetail","params","match","quote","find","quoteId","path"],"sources":["C:/React/React-Router/src/pages/QuoteDetail.js"],"sourcesContent":["import { Fragment } from \"react\";\r\nimport { Link, Route, useParams, useRouteMatch } from \"react-router-dom\";\r\nimport Comments from \"../components/comments/Comments\";\r\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\r\n\r\nconst DUMMY_QUOTES = [\r\n    { id: 'q1', author: 'Max', text: 'Learning React is fun!' },\r\n    { id: 'q2', author: 'Alex', text: 'Learning Redux is not so easy' },\r\n    { id: 'q3', author: 'Tania', text: 'I will start to code' },\r\n];\r\n\r\nconst QuoteDetail = () => {\r\n    const params = useParams();\r\n\r\n    const match = useRouteMatch();\r\n\r\n    const quote = DUMMY_QUOTES.find(quote => quote.id === params.quoteId)\r\n\r\n    if (!quote) {\r\n        <p>No quote found!</p>\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <HighlightedQuote text={quote.text} author={quote.author} />\r\n            <Route path={match.path} exact>\r\n                <div className=\"centered\">\r\n                    <Link className=\"btn--flat\" to={`/quotes/${params.quoteId}/comments`}>Load comments</Link>\r\n                </div>\r\n            </Route>\r\n            <Route path={`${match.path}/comments`}>\r\n                <Comments />\r\n            </Route>\r\n        </Fragment>\r\n\r\n    );\r\n};\r\n\r\nexport default QuoteDetail;"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,IAAI,EAAEC,KAAK,EAAEC,SAAS,EAAEC,aAAa,QAAQ,kBAAkB;AACxE,OAAOC,QAAQ,MAAM,iCAAiC;AACtD,OAAOC,gBAAgB,MAAM,uCAAuC;AAAC;AAErE,MAAMC,YAAY,GAAG,CACjB;EAAEC,EAAE,EAAE,IAAI;EAAEC,MAAM,EAAE,KAAK;EAAEC,IAAI,EAAE;AAAyB,CAAC,EAC3D;EAAEF,EAAE,EAAE,IAAI;EAAEC,MAAM,EAAE,MAAM;EAAEC,IAAI,EAAE;AAAgC,CAAC,EACnE;EAAEF,EAAE,EAAE,IAAI;EAAEC,MAAM,EAAE,OAAO;EAAEC,IAAI,EAAE;AAAuB,CAAC,CAC9D;AAED,MAAMC,WAAW,GAAG,MAAM;EAAA;EACtB,MAAMC,MAAM,GAAGT,SAAS,EAAE;EAE1B,MAAMU,KAAK,GAAGT,aAAa,EAAE;EAE7B,MAAMU,KAAK,GAAGP,YAAY,CAACQ,IAAI,CAACD,KAAK,IAAIA,KAAK,CAACN,EAAE,KAAKI,MAAM,CAACI,OAAO,CAAC;EAErE,IAAI,CAACF,KAAK,EAAE;IACR;MAAA,UAAG;IAAe;MAAA;MAAA;MAAA;IAAA,QAAI;EAC1B;EAEA,oBACI,QAAC,QAAQ;IAAA,wBACL,QAAC,gBAAgB;MAAC,IAAI,EAAEA,KAAK,CAACJ,IAAK;MAAC,MAAM,EAAEI,KAAK,CAACL;IAAO;MAAA;MAAA;MAAA;IAAA,QAAG,eAC5D,QAAC,KAAK;MAAC,IAAI,EAAEI,KAAK,CAACI,IAAK;MAAC,KAAK;MAAA,uBAC1B;QAAK,SAAS,EAAC,UAAU;QAAA,uBACrB,QAAC,IAAI;UAAC,SAAS,EAAC,WAAW;UAAC,EAAE,EAAG,WAAUL,MAAM,CAACI,OAAQ,WAAW;UAAA,UAAC;QAAa;UAAA;UAAA;UAAA;QAAA;MAAO;QAAA;QAAA;QAAA;MAAA;IACxF;MAAA;MAAA;MAAA;IAAA,QACF,eACR,QAAC,KAAK;MAAC,IAAI,EAAG,GAAEH,KAAK,CAACI,IAAK,WAAW;MAAA,uBAClC,QAAC,QAAQ;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA,QACR;EAAA;IAAA;IAAA;IAAA;EAAA,QACD;AAGnB,CAAC;AAAC,GAzBIN,WAAW;EAAA,QACER,SAAS,EAEVC,aAAa;AAAA;AAAA,KAHzBO,WAAW;AA2BjB,eAAeA,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}